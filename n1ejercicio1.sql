-- MySQL Script generated by MySQL Workbench
-- Sun Jul 24 19:40:12 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Optica
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Optica
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Optica` DEFAULT CHARACTER SET utf8 ;
USE `Optica` ;

-- -----------------------------------------------------
-- Table `Optica`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`empleado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `Optica`.`direccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`direccion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `calle` VARCHAR(255) NOT NULL,
  `numero` INT NULL,
  `piso` INT NULL,
  `puerta` VARCHAR(45) NULL,
  `ciudad` VARCHAR(45) NULL,
  `codigo_postal` INT NOT NULL,
  `pais` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `Optica`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(16) NOT NULL,
  `direccion_id` INT NOT NULL,
  `telefono` INT NOT NULL,
  `mail` VARCHAR(255) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `clienteRecomendador` INT NULL,
  `empleadoQueAtiende` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `mail_UNIQUE` (`mail` ASC) VISIBLE,
  INDEX `clienteRecomendador_idx` (`clienteRecomendador` ASC) VISIBLE,
  INDEX `empleadoQueAtiende_idx` (`empleadoQueAtiende` ASC) VISIBLE,
  INDEX `direccion_id_idx` (`direccion_id` ASC) VISIBLE,
  CONSTRAINT `clienteRecomendador`
    FOREIGN KEY (`clienteRecomendador`)
    REFERENCES `Optica`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `empleadoQueAtiende`
    FOREIGN KEY (`empleadoQueAtiende`)
    REFERENCES `Optica`.`empleado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `direccion_id`
    FOREIGN KEY (`direccion_id`)
    REFERENCES `Optica`.`direccion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Optica`.`proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`proveedor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `direccion_id1` INT NOT NULL,
  `telefono` INT NOT NULL,
  `fax` INT NULL,
  `nif` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nif_UNIQUE` (`nif` ASC) VISIBLE,
  INDEX `direccion_id_idx` (`direccion_id1` ASC) VISIBLE,
  CONSTRAINT `direccion_id1`
    FOREIGN KEY (`direccion_id1`)
    REFERENCES `Optica`.`direccion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Optica`.`marca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`marca` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `proveedor_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `proveedor_id_idx` (`proveedor_id` ASC) VISIBLE,
  CONSTRAINT `proveedor_id`
    FOREIGN KEY (`proveedor_id`)
    REFERENCES `Optica`.`proveedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Optica`.`gafa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`gafa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `marca_id` INT NOT NULL,
  `graduacion` INT NOT NULL,
  `montura` VARCHAR(45) NOT NULL,
  `colorCristal` VARCHAR(45) NOT NULL,
  `precio` FLOAT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `marca_id_idx` (`marca_id` ASC) VISIBLE,
  CONSTRAINT `marca_id`
    FOREIGN KEY (`marca_id`)
    REFERENCES `Optica`.`marca` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Optica`.`compra/factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Optica`.`factura` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `gafa_id` INT NOT NULL,
  `cliente_id` INT NOT NULL,
  `fecha` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `empleado_que_atendio` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `empleado_que_atendio_idx` (`empleado_que_atendio` ASC) VISIBLE,
  INDEX `gafa_id_idx` (`gafa_id` ASC) VISIBLE,
  CONSTRAINT `empleado_que_atendio`
    FOREIGN KEY (`empleado_que_atendio`)
    REFERENCES `Optica`.`empleado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `cliente_id`
    FOREIGN KEY (`id`)
    REFERENCES `Optica`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `gafa_id`
    FOREIGN KEY (`gafa_id`)
    REFERENCES `Optica`.`gafa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- --------------------------------------------------------------------------------------------------------
-- PRUEBAS PARA COMPROBAR QUE EL SISTEMA CUMPLE LAS FUNCIONES ESPERADAS:



INSERT INTO direccion (calle, numero, piso, puerta, ciudad, codigo_postal, pais)
values ('c/mataro',23,3,'a','venecia', 08990, 'Rusia'),
('c/francia',15,5,'6r','donosti', 45904, 'Alemania'),
('c/ortega y gaset',4,6,'7','boston', 467745, 'China');

INSERT INTO empleado (name)values ('Laura'),('Manolo');

INSERT  INTO proveedor (name, direccion_id1, telefono, fax, nif)
values ('RayBanSolutions',1,61111111,111111111,'11111111a'),
('OkleySolutions',2,62222222,22222222,'22222222a');

Insert INTO marca (name, proveedor_id) 
values ('rayban',1),
('okley',2);

INSERT INTO cliente (nombre, direccion_id, telefono, mail) 
values ('juan',1,600000000, 'juanmail'),
('maria', 2, 688888888, 'maria@mail.it');

INSERT INTO gafa (marca_id, graduacion, montura, colorCristal, precio)
values
(1,2, 'oasis','purple haze', 200.99),
(2,7, 'tomas','silver blue', 500.99);

INSERT  INTO factura ( gafa_id, cliente_id, empleado_que_atendio) 
values (1,1,1),
(2,2,1);
-- total de facturas que ha hecho el cliente con id 1:
SELECT * FROM factura WHERE cliente_id = 1;
-- para ver que cliente tiene id 1:
SELECT * FROM cliente WHERE id = 1;
-- Selecciono las id que ha vendido el empleado con id 1
SELECT gafa_id from factura WHERE empleado_que_atendio= 1;
-- lo anterior nos dice que el empleado 1 ha vendido las gafas 1 y 2 as√≠ que las consulto:
SELECT * from gafa WHERE id = 1 || id =2;

SELECT * FROM marca;

-- primero busco las marcas que se han vendido con las id de las gafas que hay en las facturas:
select f.gafa_id, g.id, g.marca_id from factura f left join gafa g on g.id = f.gafa_id;
-- ahora selecciono los proveedores que tienen la id de las marcas vendidas:
select p.id, p.name, p.nif, m.proveedor_id from proveedor p left join marca m on p.id = m.proveedor_id;
-- y asi obtengo los proveedores que me han garantizado ventas
